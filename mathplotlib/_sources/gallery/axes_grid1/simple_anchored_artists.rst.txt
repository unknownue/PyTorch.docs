
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/axes_grid1/simple_anchored_artists.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. meta::
        :keywords: codex

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_axes_grid1_simple_anchored_artists.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_axes_grid1_simple_anchored_artists.py:


=======================
Simple Anchored Artists
=======================

This example illustrates the use of the anchored helper classes found in
:mod:`matplotlib.offsetbox` and in :mod:`mpl_toolkits.axes_grid1`.
An implementation of a similar figure, but without use of the toolkit,
can be found in :doc:`/gallery/misc/anchored_artists`.

.. GENERATED FROM PYTHON SOURCE LINES 11-72



.. image-sg:: /gallery/axes_grid1/images/sphx_glr_simple_anchored_artists_001.png
   :alt: simple anchored artists
   :srcset: /gallery/axes_grid1/images/sphx_glr_simple_anchored_artists_001.png, /gallery/axes_grid1/images/sphx_glr_simple_anchored_artists_001_2_00x.png 2.00x
   :class: sphx-glr-single-img





.. code-block:: default


    import matplotlib.pyplot as plt


    def draw_text(ax):
        """
        Draw two text-boxes, anchored by different corners to the upper-left
        corner of the figure.
        """
        from matplotlib.offsetbox import AnchoredText
        at = AnchoredText("Figure 1a",
                          loc='upper left', prop=dict(size=8), frameon=True,
                          )
        at.patch.set_boxstyle("round,pad=0.,rounding_size=0.2")
        ax.add_artist(at)

        at2 = AnchoredText("Figure 1(b)",
                           loc='lower left', prop=dict(size=8), frameon=True,
                           bbox_to_anchor=(0., 1.),
                           bbox_transform=ax.transAxes
                           )
        at2.patch.set_boxstyle("round,pad=0.,rounding_size=0.2")
        ax.add_artist(at2)


    def draw_circle(ax):
        """
        Draw a circle in axis coordinates
        """
        from matplotlib.patches import Circle
        from mpl_toolkits.axes_grid1.anchored_artists import AnchoredDrawingArea
        ada = AnchoredDrawingArea(20, 20, 0, 0,
                                  loc='upper right', pad=0., frameon=False)
        p = Circle((10, 10), 10)
        ada.da.add_artist(p)
        ax.add_artist(ada)


    def draw_sizebar(ax):
        """
        Draw a horizontal bar with length of 0.1 in data coordinates,
        with a fixed label underneath.
        """
        from mpl_toolkits.axes_grid1.anchored_artists import AnchoredSizeBar
        asb = AnchoredSizeBar(ax.transData,
                              0.1,
                              r"1$^{\prime}$",
                              loc='lower center',
                              pad=0.1, borderpad=0.5, sep=5,
                              frameon=False)
        ax.add_artist(asb)


    fig, ax = plt.subplots()
    ax.set_aspect(1.)

    draw_text(ax)
    draw_circle(ax)
    draw_sizebar(ax)

    plt.show()


.. _sphx_glr_download_gallery_axes_grid1_simple_anchored_artists.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: simple_anchored_artists.py <simple_anchored_artists.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: simple_anchored_artists.ipynb <simple_anchored_artists.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
