
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/tree/plot_iris_dtc.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_tree_plot_iris_dtc.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_tree_plot_iris_dtc.py:


=======================================================================
Plot the decision surface of decision trees trained on the iris dataset
=======================================================================

Plot the decision surface of a decision tree trained on pairs
of features of the iris dataset.

See :ref:`decision tree <tree>` for more information on the estimator.

For each pair of iris features, the decision tree learns decision
boundaries made of combinations of simple thresholding rules inferred from
the training samples.

We also show the tree structure of a model built on all of the features.

.. GENERATED FROM PYTHON SOURCE LINES 18-19

First load the copy of the Iris dataset shipped with scikit-learn:

.. GENERATED FROM PYTHON SOURCE LINES 19-24

.. code-block:: default

    from sklearn.datasets import load_iris

    iris = load_iris()









.. GENERATED FROM PYTHON SOURCE LINES 25-26

Display the decision functions of trees trained on all pairs of features.

.. GENERATED FROM PYTHON SOURCE LINES 26-77

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from sklearn.datasets import load_iris
    from sklearn.inspection import DecisionBoundaryDisplay
    from sklearn.tree import DecisionTreeClassifier

    # Parameters
    n_classes = 3
    plot_colors = "ryb"
    plot_step = 0.02


    for pairidx, pair in enumerate([[0, 1], [0, 2], [0, 3], [1, 2], [1, 3], [2, 3]]):
        # We only take the two corresponding features
        X = iris.data[:, pair]
        y = iris.target

        # Train
        clf = DecisionTreeClassifier().fit(X, y)

        # Plot the decision boundary
        ax = plt.subplot(2, 3, pairidx + 1)
        plt.tight_layout(h_pad=0.5, w_pad=0.5, pad=2.5)
        DecisionBoundaryDisplay.from_estimator(
            clf,
            X,
            cmap=plt.cm.RdYlBu,
            response_method="predict",
            ax=ax,
            xlabel=iris.feature_names[pair[0]],
            ylabel=iris.feature_names[pair[1]],
        )

        # Plot the training points
        for i, color in zip(range(n_classes), plot_colors):
            idx = np.where(y == i)
            plt.scatter(
                X[idx, 0],
                X[idx, 1],
                c=color,
                label=iris.target_names[i],
                cmap=plt.cm.RdYlBu,
                edgecolor="black",
                s=15,
            )

    plt.suptitle("Decision surface of decision trees trained on pairs of features")
    plt.legend(loc="lower right", borderpad=0, handletextpad=0)
    _ = plt.axis("tight")




.. image-sg:: /auto_examples/tree/images/sphx_glr_plot_iris_dtc_001.png
   :alt: Decision surface of decision trees trained on pairs of features
   :srcset: /auto_examples/tree/images/sphx_glr_plot_iris_dtc_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /root/scikit-learn-1.3.2/examples/tree/plot_iris_dtc.py:63: UserWarning:

    No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored

    /root/scikit-learn-1.3.2/examples/tree/plot_iris_dtc.py:63: UserWarning:

    No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored

    /root/scikit-learn-1.3.2/examples/tree/plot_iris_dtc.py:63: UserWarning:

    No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored

    /root/scikit-learn-1.3.2/examples/tree/plot_iris_dtc.py:63: UserWarning:

    No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored

    /root/scikit-learn-1.3.2/examples/tree/plot_iris_dtc.py:63: UserWarning:

    No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored

    /root/scikit-learn-1.3.2/examples/tree/plot_iris_dtc.py:63: UserWarning:

    No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored





.. GENERATED FROM PYTHON SOURCE LINES 78-80

Display the structure of a single decision tree trained on all the features
together.

.. GENERATED FROM PYTHON SOURCE LINES 80-87

.. code-block:: default

    from sklearn.tree import plot_tree

    plt.figure()
    clf = DecisionTreeClassifier().fit(iris.data, iris.target)
    plot_tree(clf, filled=True)
    plt.title("Decision tree trained on all the iris features")
    plt.show()



.. image-sg:: /auto_examples/tree/images/sphx_glr_plot_iris_dtc_002.png
   :alt: Decision tree trained on all the iris features
   :srcset: /auto_examples/tree/images/sphx_glr_plot_iris_dtc_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.517 seconds)


.. _sphx_glr_download_auto_examples_tree_plot_iris_dtc.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/1.3.X?urlpath=lab/tree/notebooks/auto_examples/tree/plot_iris_dtc.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_iris_dtc.py <plot_iris_dtc.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_iris_dtc.ipynb <plot_iris_dtc.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
