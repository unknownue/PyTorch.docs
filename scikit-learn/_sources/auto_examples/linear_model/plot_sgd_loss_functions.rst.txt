
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/linear_model/plot_sgd_loss_functions.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_linear_model_plot_sgd_loss_functions.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_linear_model_plot_sgd_loss_functions.py:


==========================
SGD: convex loss functions
==========================

A plot that compares the various convex loss functions supported by
:class:`~sklearn.linear_model.SGDClassifier` .

.. GENERATED FROM PYTHON SOURCE LINES 10-50



.. image-sg:: /auto_examples/linear_model/images/sphx_glr_plot_sgd_loss_functions_001.png
   :alt: plot sgd loss functions
   :srcset: /auto_examples/linear_model/images/sphx_glr_plot_sgd_loss_functions_001.png
   :class: sphx-glr-single-img





.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np


    def modified_huber_loss(y_true, y_pred):
        z = y_pred * y_true
        loss = -4 * z
        loss[z >= -1] = (1 - z[z >= -1]) ** 2
        loss[z >= 1.0] = 0
        return loss


    xmin, xmax = -4, 4
    xx = np.linspace(xmin, xmax, 100)
    lw = 2
    plt.plot([xmin, 0, 0, xmax], [1, 1, 0, 0], color="gold", lw=lw, label="Zero-one loss")
    plt.plot(xx, np.where(xx < 1, 1 - xx, 0), color="teal", lw=lw, label="Hinge loss")
    plt.plot(xx, -np.minimum(xx, 0), color="yellowgreen", lw=lw, label="Perceptron loss")
    plt.plot(xx, np.log2(1 + np.exp(-xx)), color="cornflowerblue", lw=lw, label="Log loss")
    plt.plot(
        xx,
        np.where(xx < 1, 1 - xx, 0) ** 2,
        color="orange",
        lw=lw,
        label="Squared hinge loss",
    )
    plt.plot(
        xx,
        modified_huber_loss(xx, 1),
        color="darkorchid",
        lw=lw,
        linestyle="--",
        label="Modified Huber loss",
    )
    plt.ylim((0, 8))
    plt.legend(loc="upper right")
    plt.xlabel(r"Decision function $f(x)$")
    plt.ylabel("$L(y=1, f(x))$")
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.071 seconds)


.. _sphx_glr_download_auto_examples_linear_model_plot_sgd_loss_functions.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/1.3.X?urlpath=lab/tree/notebooks/auto_examples/linear_model/plot_sgd_loss_functions.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_sgd_loss_functions.py <plot_sgd_loss_functions.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_sgd_loss_functions.ipynb <plot_sgd_loss_functions.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
